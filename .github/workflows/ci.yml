name: CI

on:
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: '48 13 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  msrv:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@1.66
    - run: cargo build --workspace --all-features

  test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo test --workspace --all-targets --all-features
    - run: cargo test --workspace --doc --all-features

  build_feature:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature: ["", serde, alloc, "serde,alloc", std, "alloc,std"]
    env:
      RUSTFLAGS: -D warnings
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@1.66
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - run: cargo check -p relative-path --no-default-features --features "${{matrix.feature}}"
    - run: cargo clippy -p relative-path --no-default-features --features "${{matrix.feature}}"

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - run: cargo clippy --workspace --all-features --all-targets -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - run: cargo fmt --check --all
